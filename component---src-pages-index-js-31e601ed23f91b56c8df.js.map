{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo/index.js","webpack:///./src/components/header/index.js","webpack:///./src/components/layout/index.js"],"names":["Template","_ref","allMarkdownRemark","data","articles","edges","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","className","map","article","blog","node","frontmatter","key","antd_lib_icon__WEBPACK_IMPORTED_MODULE_1___default","type","date","pageQuery","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","siteTitle","react_default","style","margin","maxWidth","padding","id","gatsby_browser_entry","to","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-index-js-31e601ed23f91b56c8df.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n// import { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\n// import Image from '../components/image'\nimport SEO from '../components/seo'\nimport { Icon } from 'antd'\n\n// const IndexPage = () => (\n  // <Layout>\n  //   <SEO title=\"Home\" keywords={[`linyongjia`, `yoga.lin`]} />\n  //   <h1>Hi people</h1>\n  //   <Button>Test</Button>\n  //   <p>Welcome to your new Gatsby site.</p>\n  //   <p>Now go build something great.</p>\n  //   <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n  //     <Image />\n  //   </div>\n  //   <Link to=\"/page-2/\">Go to page 2</Link>\n  // </Layout>\n// )\n\nexport default function Template({\n  data\n}) {\n  const { allMarkdownRemark } = data;\n  const articles = allMarkdownRemark ? allMarkdownRemark.edges : []\n  console.log(articles)\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`linyongjia`, `yoga.lin`]} />\n      <div className=\"articles-container\">\n        {\n          articles.map(article => {\n            const { frontmatter:blog } = article.node\n            return (\n              <div className=\"article-card\">\n                <h3 className=\"article-card-title\" key=\"blog.path\">{blog.title}</h3>\n                <p className=\"article-card-date\" key=\"blog.path\"><Icon type=\"calendar\"/> {blog.date}</p>\n              </div>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query AllBlog {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport './header.scss'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"header\">\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <ul id=\"navigator\">\n        <li>\n          <Link\n            to=\"/\"\n          >\n            首页\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/\"\n          >\n            标签\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/\"\n          >\n            生活\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/\"\n          >\n            关于\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../header'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"layout\">\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"main\">\n          {children}\n          {/* <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer> */}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}